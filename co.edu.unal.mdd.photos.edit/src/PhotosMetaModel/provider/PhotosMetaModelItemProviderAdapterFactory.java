/**
 */
package PhotosMetaModel.provider;

import PhotosMetaModel.util.PhotosMetaModelAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class PhotosMetaModelItemProviderAdapterFactory extends PhotosMetaModelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public PhotosMetaModelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.SoftGallery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftGalleryItemProvider softGalleryItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.SoftGallery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftGalleryAdapter() {
		if (softGalleryItemProvider == null) {
			softGalleryItemProvider = new SoftGalleryItemProvider(this);
		}

		return softGalleryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Domain} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DomainItemProvider domainItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Domain}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDomainAdapter() {
		if (domainItemProvider == null) {
			domainItemProvider = new DomainItemProvider(this);
		}

		return domainItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Architecture} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureItemProvider architectureItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Architecture}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArchitectureAdapter() {
		if (architectureItemProvider == null) {
			architectureItemProvider = new ArchitectureItemProvider(this);
		}

		return architectureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Technology} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TechnologyItemProvider technologyItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Technology}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTechnologyAdapter() {
		if (technologyItemProvider == null) {
			technologyItemProvider = new TechnologyItemProvider(this);
		}

		return technologyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Spring} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpringItemProvider springItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Spring}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpringAdapter() {
		if (springItemProvider == null) {
			springItemProvider = new SpringItemProvider(this);
		}

		return springItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.React} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReactItemProvider reactItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.React}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReactAdapter() {
		if (reactItemProvider == null) {
			reactItemProvider = new ReactItemProvider(this);
		}

		return reactItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Repository} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepositoryItemProvider repositoryItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Repository}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepositoryAdapter() {
		if (repositoryItemProvider == null) {
			repositoryItemProvider = new RepositoryItemProvider(this);
		}

		return repositoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.RestController} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RestControllerItemProvider restControllerItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.RestController}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRestControllerAdapter() {
		if (restControllerItemProvider == null) {
			restControllerItemProvider = new RestControllerItemProvider(this);
		}

		return restControllerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.SpringBootApplication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpringBootApplicationItemProvider springBootApplicationItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.SpringBootApplication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpringBootApplicationAdapter() {
		if (springBootApplicationItemProvider == null) {
			springBootApplicationItemProvider = new SpringBootApplicationItemProvider(this);
		}

		return springBootApplicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.RequestMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestMappingItemProvider requestMappingItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.RequestMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestMappingAdapter() {
		if (requestMappingItemProvider == null) {
			requestMappingItemProvider = new RequestMappingItemProvider(this);
		}

		return requestMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.PostMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PostMappingItemProvider postMappingItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.PostMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPostMappingAdapter() {
		if (postMappingItemProvider == null) {
			postMappingItemProvider = new PostMappingItemProvider(this);
		}

		return postMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.GetMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GetMappingItemProvider getMappingItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.GetMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGetMappingAdapter() {
		if (getMappingItemProvider == null) {
			getMappingItemProvider = new GetMappingItemProvider(this);
		}

		return getMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.PutMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PutMappingItemProvider putMappingItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.PutMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPutMappingAdapter() {
		if (putMappingItemProvider == null) {
			putMappingItemProvider = new PutMappingItemProvider(this);
		}

		return putMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.ExceptionHandler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExceptionHandlerItemProvider exceptionHandlerItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.ExceptionHandler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExceptionHandlerAdapter() {
		if (exceptionHandlerItemProvider == null) {
			exceptionHandlerItemProvider = new ExceptionHandlerItemProvider(this);
		}

		return exceptionHandlerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.DeleteMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeleteMappingItemProvider deleteMappingItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.DeleteMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeleteMappingAdapter() {
		if (deleteMappingItemProvider == null) {
			deleteMappingItemProvider = new DeleteMappingItemProvider(this);
		}

		return deleteMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.RequestPart} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestPartItemProvider requestPartItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.RequestPart}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestPartAdapter() {
		if (requestPartItemProvider == null) {
			requestPartItemProvider = new RequestPartItemProvider(this);
		}

		return requestPartItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Autowired} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AutowiredItemProvider autowiredItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Autowired}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAutowiredAdapter() {
		if (autowiredItemProvider == null) {
			autowiredItemProvider = new AutowiredItemProvider(this);
		}

		return autowiredItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Exception} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExceptionItemProvider exceptionItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Exception}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExceptionAdapter() {
		if (exceptionItemProvider == null) {
			exceptionItemProvider = new ExceptionItemProvider(this);
		}

		return exceptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Entity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityItemProvider entityItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Entity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityAdapter() {
		if (entityItemProvider == null) {
			entityItemProvider = new EntityItemProvider(this);
		}

		return entityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Table_s} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Table_sItemProvider table_sItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Table_s}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTable_sAdapter() {
		if (table_sItemProvider == null) {
			table_sItemProvider = new Table_sItemProvider(this);
		}

		return table_sItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Id} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdItemProvider idItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Id}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdAdapter() {
		if (idItemProvider == null) {
			idItemProvider = new IdItemProvider(this);
		}

		return idItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Column_p} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Column_pItemProvider column_pItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Column_p}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColumn_pAdapter() {
		if (column_pItemProvider == null) {
			column_pItemProvider = new Column_pItemProvider(this);
		}

		return column_pItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.GeneratedValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneratedValueItemProvider generatedValueItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.GeneratedValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeneratedValueAdapter() {
		if (generatedValueItemProvider == null) {
			generatedValueItemProvider = new GeneratedValueItemProvider(this);
		}

		return generatedValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.NamedNativeQuery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedNativeQueryItemProvider namedNativeQueryItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.NamedNativeQuery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedNativeQueryAdapter() {
		if (namedNativeQueryItemProvider == null) {
			namedNativeQueryItemProvider = new NamedNativeQueryItemProvider(this);
		}

		return namedNativeQueryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Specification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecificationItemProvider specificationItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Specification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecificationAdapter() {
		if (specificationItemProvider == null) {
			specificationItemProvider = new SpecificationItemProvider(this);
		}

		return specificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.SearchCriteria} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SearchCriteriaItemProvider searchCriteriaItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.SearchCriteria}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSearchCriteriaAdapter() {
		if (searchCriteriaItemProvider == null) {
			searchCriteriaItemProvider = new SearchCriteriaItemProvider(this);
		}

		return searchCriteriaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Predicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PredicateItemProvider predicateItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Predicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPredicateAdapter() {
		if (predicateItemProvider == null) {
			predicateItemProvider = new PredicateItemProvider(this);
		}

		return predicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Configuration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationItemProvider configurationItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Configuration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationAdapter() {
		if (configurationItemProvider == null) {
			configurationItemProvider = new ConfigurationItemProvider(this);
		}

		return configurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Component} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentItemProvider componentItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Component}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentAdapter() {
		if (componentItemProvider == null) {
			componentItemProvider = new ComponentItemProvider(this);
		}

		return componentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Order_s} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Order_sItemProvider order_sItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Order_s}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrder_sAdapter() {
		if (order_sItemProvider == null) {
			order_sItemProvider = new Order_sItemProvider(this);
		}

		return order_sItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.EnableAuthorizationServer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnableAuthorizationServerItemProvider enableAuthorizationServerItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.EnableAuthorizationServer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnableAuthorizationServerAdapter() {
		if (enableAuthorizationServerItemProvider == null) {
			enableAuthorizationServerItemProvider = new EnableAuthorizationServerItemProvider(this);
		}

		return enableAuthorizationServerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.EnableResourceServer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnableResourceServerItemProvider enableResourceServerItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.EnableResourceServer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnableResourceServerAdapter() {
		if (enableResourceServerItemProvider == null) {
			enableResourceServerItemProvider = new EnableResourceServerItemProvider(this);
		}

		return enableResourceServerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.EnableWebSecurity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnableWebSecurityItemProvider enableWebSecurityItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.EnableWebSecurity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnableWebSecurityAdapter() {
		if (enableWebSecurityItemProvider == null) {
			enableWebSecurityItemProvider = new EnableWebSecurityItemProvider(this);
		}

		return enableWebSecurityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.EnableGlobalMethodSecurity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnableGlobalMethodSecurityItemProvider enableGlobalMethodSecurityItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.EnableGlobalMethodSecurity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnableGlobalMethodSecurityAdapter() {
		if (enableGlobalMethodSecurityItemProvider == null) {
			enableGlobalMethodSecurityItemProvider = new EnableGlobalMethodSecurityItemProvider(this);
		}

		return enableGlobalMethodSecurityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Bean} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BeanItemProvider beanItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Bean}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBeanAdapter() {
		if (beanItemProvider == null) {
			beanItemProvider = new BeanItemProvider(this);
		}

		return beanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.PostgreSQL} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PostgreSQLItemProvider postgreSQLItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.PostgreSQL}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPostgreSQLAdapter() {
		if (postgreSQLItemProvider == null) {
			postgreSQLItemProvider = new PostgreSQLItemProvider(this);
		}

		return postgreSQLItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Query} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryItemProvider queryItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Query}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryAdapter() {
		if (queryItemProvider == null) {
			queryItemProvider = new QueryItemProvider(this);
		}

		return queryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.ForeignKey} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForeignKeyItemProvider foreignKeyItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.ForeignKey}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForeignKeyAdapter() {
		if (foreignKeyItemProvider == null) {
			foreignKeyItemProvider = new ForeignKeyItemProvider(this);
		}

		return foreignKeyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Trigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriggerItemProvider triggerItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Trigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriggerAdapter() {
		if (triggerItemProvider == null) {
			triggerItemProvider = new TriggerItemProvider(this);
		}

		return triggerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.View} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewItemProvider viewItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.View}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createViewAdapter() {
		if (viewItemProvider == null) {
			viewItemProvider = new ViewItemProvider(this);
		}

		return viewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Index_p} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Index_pItemProvider index_pItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Index_p}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndex_pAdapter() {
		if (index_pItemProvider == null) {
			index_pItemProvider = new Index_pItemProvider(this);
		}

		return index_pItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Table_p} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Table_pItemProvider table_pItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Table_p}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTable_pAdapter() {
		if (table_pItemProvider == null) {
			table_pItemProvider = new Table_pItemProvider(this);
		}

		return table_pItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Function_p} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Function_pItemProvider function_pItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Function_p}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunction_pAdapter() {
		if (function_pItemProvider == null) {
			function_pItemProvider = new Function_pItemProvider(this);
		}

		return function_pItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Database} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DatabaseItemProvider databaseItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Database}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDatabaseAdapter() {
		if (databaseItemProvider == null) {
			databaseItemProvider = new DatabaseItemProvider(this);
		}

		return databaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Scheme} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchemeItemProvider schemeItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Scheme}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchemeAdapter() {
		if (schemeItemProvider == null) {
			schemeItemProvider = new SchemeItemProvider(this);
		}

		return schemeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.User_p} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected User_pItemProvider user_pItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.User_p}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUser_pAdapter() {
		if (user_pItemProvider == null) {
			user_pItemProvider = new User_pItemProvider(this);
		}

		return user_pItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Cluster} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClusterItemProvider clusterItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Cluster}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClusterAdapter() {
		if (clusterItemProvider == null) {
			clusterItemProvider = new ClusterItemProvider(this);
		}

		return clusterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Row} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RowItemProvider rowItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Row}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRowAdapter() {
		if (rowItemProvider == null) {
			rowItemProvider = new RowItemProvider(this);
		}

		return rowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Column} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColumnItemProvider columnItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Column}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColumnAdapter() {
		if (columnItemProvider == null) {
			columnItemProvider = new ColumnItemProvider(this);
		}

		return columnItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.DataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataTypeItemProvider dataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.DataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataTypeAdapter() {
		if (dataTypeItemProvider == null) {
			dataTypeItemProvider = new DataTypeItemProvider(this);
		}

		return dataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Constraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintItemProvider constraintItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Constraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintAdapter() {
		if (constraintItemProvider == null) {
			constraintItemProvider = new ConstraintItemProvider(this);
		}

		return constraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Privilege} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrivilegeItemProvider privilegeItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Privilege}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrivilegeAdapter() {
		if (privilegeItemProvider == null) {
			privilegeItemProvider = new PrivilegeItemProvider(this);
		}

		return privilegeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Policy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolicyItemProvider policyItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Policy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolicyAdapter() {
		if (policyItemProvider == null) {
			policyItemProvider = new PolicyItemProvider(this);
		}

		return policyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Clause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClauseItemProvider clauseItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Clause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClauseAdapter() {
		if (clauseItemProvider == null) {
			clauseItemProvider = new ClauseItemProvider(this);
		}

		return clauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Index} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndexItemProvider indexItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Index}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndexAdapter() {
		if (indexItemProvider == null) {
			indexItemProvider = new IndexItemProvider(this);
		}

		return indexItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Column_s} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Column_sItemProvider column_sItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Column_s}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColumn_sAdapter() {
		if (column_sItemProvider == null) {
			column_sItemProvider = new Column_sItemProvider(this);
		}

		return column_sItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.User_d} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected User_dItemProvider user_dItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.User_d}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUser_dAdapter() {
		if (user_dItemProvider == null) {
			user_dItemProvider = new User_dItemProvider(this);
		}

		return user_dItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.AppAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AppAccessItemProvider appAccessItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.AppAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAppAccessAdapter() {
		if (appAccessItemProvider == null) {
			appAccessItemProvider = new AppAccessItemProvider(this);
		}

		return appAccessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.ProfileManagement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProfileManagementItemProvider profileManagementItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.ProfileManagement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProfileManagementAdapter() {
		if (profileManagementItemProvider == null) {
			profileManagementItemProvider = new ProfileManagementItemProvider(this);
		}

		return profileManagementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.AlbumManagement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlbumManagementItemProvider albumManagementItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.AlbumManagement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlbumManagementAdapter() {
		if (albumManagementItemProvider == null) {
			albumManagementItemProvider = new AlbumManagementItemProvider(this);
		}

		return albumManagementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.PhotoActions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhotoActionsItemProvider photoActionsItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.PhotoActions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhotoActionsAdapter() {
		if (photoActionsItemProvider == null) {
			photoActionsItemProvider = new PhotoActionsItemProvider(this);
		}

		return photoActionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Photo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhotoItemProvider photoItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Photo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhotoAdapter() {
		if (photoItemProvider == null) {
			photoItemProvider = new PhotoItemProvider(this);
		}

		return photoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Album} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlbumItemProvider albumItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Album}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlbumAdapter() {
		if (albumItemProvider == null) {
			albumItemProvider = new AlbumItemProvider(this);
		}

		return albumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.AmazonWebServices} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AmazonWebServicesItemProvider amazonWebServicesItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.AmazonWebServices}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAmazonWebServicesAdapter() {
		if (amazonWebServicesItemProvider == null) {
			amazonWebServicesItemProvider = new AmazonWebServicesItemProvider(this);
		}

		return amazonWebServicesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.NTier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NTierItemProvider nTierItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.NTier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNTierAdapter() {
		if (nTierItemProvider == null) {
			nTierItemProvider = new NTierItemProvider(this);
		}

		return nTierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Layer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LayerItemProvider layerItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Layer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLayerAdapter() {
		if (layerItemProvider == null) {
			layerItemProvider = new LayerItemProvider(this);
		}

		return layerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Connection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionItemProvider connectionItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Connection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionAdapter() {
		if (connectionItemProvider == null) {
			connectionItemProvider = new ConnectionItemProvider(this);
		}

		return connectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Relation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationItemProvider relationItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Relation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationAdapter() {
		if (relationItemProvider == null) {
			relationItemProvider = new RelationItemProvider(this);
		}

		return relationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.REST} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RESTItemProvider restItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.REST}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRESTAdapter() {
		if (restItemProvider == null) {
			restItemProvider = new RESTItemProvider(this);
		}

		return restItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.PostgreSQLConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PostgreSQLConnectionItemProvider postgreSQLConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.PostgreSQLConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPostgreSQLConnectionAdapter() {
		if (postgreSQLConnectionItemProvider == null) {
			postgreSQLConnectionItemProvider = new PostgreSQLConnectionItemProvider(this);
		}

		return postgreSQLConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.AmazonS3API} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AmazonS3APIItemProvider amazonS3APIItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.AmazonS3API}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAmazonS3APIAdapter() {
		if (amazonS3APIItemProvider == null) {
			amazonS3APIItemProvider = new AmazonS3APIItemProvider(this);
		}

		return amazonS3APIItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Presentation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PresentationItemProvider presentationItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Presentation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPresentationAdapter() {
		if (presentationItemProvider == null) {
			presentationItemProvider = new PresentationItemProvider(this);
		}

		return presentationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.BusinessLogic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessLogicItemProvider businessLogicItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.BusinessLogic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessLogicAdapter() {
		if (businessLogicItemProvider == null) {
			businessLogicItemProvider = new BusinessLogicItemProvider(this);
		}

		return businessLogicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Data} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataItemProvider dataItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Data}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataAdapter() {
		if (dataItemProvider == null) {
			dataItemProvider = new DataItemProvider(this);
		}

		return dataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.AllowedToUse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AllowedToUseItemProvider allowedToUseItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.AllowedToUse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAllowedToUseAdapter() {
		if (allowedToUseItemProvider == null) {
			allowedToUseItemProvider = new AllowedToUseItemProvider(this);
		}

		return allowedToUseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.PresentationSegment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PresentationSegmentItemProvider presentationSegmentItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.PresentationSegment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPresentationSegmentAdapter() {
		if (presentationSegmentItemProvider == null) {
			presentationSegmentItemProvider = new PresentationSegmentItemProvider(this);
		}

		return presentationSegmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.BusinessLogicSegment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessLogicSegmentItemProvider businessLogicSegmentItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.BusinessLogicSegment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessLogicSegmentAdapter() {
		if (businessLogicSegmentItemProvider == null) {
			businessLogicSegmentItemProvider = new BusinessLogicSegmentItemProvider(this);
		}

		return businessLogicSegmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.DataSegment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataSegmentItemProvider dataSegmentItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.DataSegment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataSegmentAdapter() {
		if (dataSegmentItemProvider == null) {
			dataSegmentItemProvider = new DataSegmentItemProvider(this);
		}

		return dataSegmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.View_a} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected View_aItemProvider view_aItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.View_a}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createView_aAdapter() {
		if (view_aItemProvider == null) {
			view_aItemProvider = new View_aItemProvider(this);
		}

		return view_aItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Component_a} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Component_aItemProvider component_aItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Component_a}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponent_aAdapter() {
		if (component_aItemProvider == null) {
			component_aItemProvider = new Component_aItemProvider(this);
		}

		return component_aItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Action_a} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Action_aItemProvider action_aItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Action_a}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAction_aAdapter() {
		if (action_aItemProvider == null) {
			action_aItemProvider = new Action_aItemProvider(this);
		}

		return action_aItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Controller_a} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Controller_aItemProvider controller_aItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Controller_a}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createController_aAdapter() {
		if (controller_aItemProvider == null) {
			controller_aItemProvider = new Controller_aItemProvider(this);
		}

		return controller_aItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Model_a} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Model_aItemProvider model_aItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Model_a}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModel_aAdapter() {
		if (model_aItemProvider == null) {
			model_aItemProvider = new Model_aItemProvider(this);
		}

		return model_aItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Repository_a} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Repository_aItemProvider repository_aItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Repository_a}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepository_aAdapter() {
		if (repository_aItemProvider == null) {
			repository_aItemProvider = new Repository_aItemProvider(this);
		}

		return repository_aItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Security_a} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Security_aItemProvider security_aItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Security_a}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSecurity_aAdapter() {
		if (security_aItemProvider == null) {
			security_aItemProvider = new Security_aItemProvider(this);
		}

		return security_aItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.PostgreSQL_a} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PostgreSQL_aItemProvider postgreSQL_aItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.PostgreSQL_a}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPostgreSQL_aAdapter() {
		if (postgreSQL_aItemProvider == null) {
			postgreSQL_aItemProvider = new PostgreSQL_aItemProvider(this);
		}

		return postgreSQL_aItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.AmazonS3Storage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AmazonS3StorageItemProvider amazonS3StorageItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.AmazonS3Storage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAmazonS3StorageAdapter() {
		if (amazonS3StorageItemProvider == null) {
			amazonS3StorageItemProvider = new AmazonS3StorageItemProvider(this);
		}

		return amazonS3StorageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Modules} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModulesItemProvider modulesItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Modules}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModulesAdapter() {
		if (modulesItemProvider == null) {
			modulesItemProvider = new ModulesItemProvider(this);
		}

		return modulesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Components} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentsItemProvider componentsItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Components}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentsAdapter() {
		if (componentsItemProvider == null) {
			componentsItemProvider = new ComponentsItemProvider(this);
		}

		return componentsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.ReactFunctions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReactFunctionsItemProvider reactFunctionsItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.ReactFunctions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReactFunctionsAdapter() {
		if (reactFunctionsItemProvider == null) {
			reactFunctionsItemProvider = new ReactFunctionsItemProvider(this);
		}

		return reactFunctionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Render} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenderItemProvider renderItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Render}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenderAdapter() {
		if (renderItemProvider == null) {
			renderItemProvider = new RenderItemProvider(this);
		}

		return renderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Constructor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstructorItemProvider constructorItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Constructor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstructorAdapter() {
		if (constructorItemProvider == null) {
			constructorItemProvider = new ConstructorItemProvider(this);
		}

		return constructorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.LifeCycle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LifeCycleItemProvider lifeCycleItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.LifeCycle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLifeCycleAdapter() {
		if (lifeCycleItemProvider == null) {
			lifeCycleItemProvider = new LifeCycleItemProvider(this);
		}

		return lifeCycleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.AmazonSimpleStorageService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AmazonSimpleStorageServiceItemProvider amazonSimpleStorageServiceItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.AmazonSimpleStorageService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAmazonSimpleStorageServiceAdapter() {
		if (amazonSimpleStorageServiceItemProvider == null) {
			amazonSimpleStorageServiceItemProvider = new AmazonSimpleStorageServiceItemProvider(this);
		}

		return amazonSimpleStorageServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Bucket} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BucketItemProvider bucketItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Bucket}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBucketAdapter() {
		if (bucketItemProvider == null) {
			bucketItemProvider = new BucketItemProvider(this);
		}

		return bucketItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.BatchOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BatchOperationItemProvider batchOperationItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.BatchOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBatchOperationAdapter() {
		if (batchOperationItemProvider == null) {
			batchOperationItemProvider = new BatchOperationItemProvider(this);
		}

		return batchOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Access} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessItemProvider accessItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Access}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessAdapter() {
		if (accessItemProvider == null) {
			accessItemProvider = new AccessItemProvider(this);
		}

		return accessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Public} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PublicItemProvider publicItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Public}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPublicAdapter() {
		if (publicItemProvider == null) {
			publicItemProvider = new PublicItemProvider(this);
		}

		return publicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.ObjectsPublic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectsPublicItemProvider objectsPublicItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.ObjectsPublic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectsPublicAdapter() {
		if (objectsPublicItemProvider == null) {
			objectsPublicItemProvider = new ObjectsPublicItemProvider(this);
		}

		return objectsPublicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.BucketObjectsNotPublic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BucketObjectsNotPublicItemProvider bucketObjectsNotPublicItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.BucketObjectsNotPublic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBucketObjectsNotPublicAdapter() {
		if (bucketObjectsNotPublicItemProvider == null) {
			bucketObjectsNotPublicItemProvider = new BucketObjectsNotPublicItemProvider(this);
		}

		return bucketObjectsNotPublicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.OnlyAuthorized} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnlyAuthorizedItemProvider onlyAuthorizedItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.OnlyAuthorized}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOnlyAuthorizedAdapter() {
		if (onlyAuthorizedItemProvider == null) {
			onlyAuthorizedItemProvider = new OnlyAuthorizedItemProvider(this);
		}

		return onlyAuthorizedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.File_a} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected File_aItemProvider file_aItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.File_a}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFile_aAdapter() {
		if (file_aItemProvider == null) {
			file_aItemProvider = new File_aItemProvider(this);
		}

		return file_aItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Folder_a} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Folder_aItemProvider folder_aItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Folder_a}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFolder_aAdapter() {
		if (folder_aItemProvider == null) {
			folder_aItemProvider = new Folder_aItemProvider(this);
		}

		return folder_aItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.MetaData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetaDataItemProvider metaDataItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.MetaData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetaDataAdapter() {
		if (metaDataItemProvider == null) {
			metaDataItemProvider = new MetaDataItemProvider(this);
		}

		return metaDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.ReactConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReactConfigurationItemProvider reactConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.ReactConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReactConfigurationAdapter() {
		if (reactConfigurationItemProvider == null) {
			reactConfigurationItemProvider = new ReactConfigurationItemProvider(this);
		}

		return reactConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.ReactDOM} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReactDOMItemProvider reactDOMItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.ReactDOM}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReactDOMAdapter() {
		if (reactDOMItemProvider == null) {
			reactDOMItemProvider = new ReactDOMItemProvider(this);
		}

		return reactDOMItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Dependencies} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DependenciesItemProvider dependenciesItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Dependencies}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDependenciesAdapter() {
		if (dependenciesItemProvider == null) {
			dependenciesItemProvider = new DependenciesItemProvider(this);
		}

		return dependenciesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Logic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicItemProvider logicItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Logic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicAdapter() {
		if (logicItemProvider == null) {
			logicItemProvider = new LogicItemProvider(this);
		}

		return logicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.UI} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UIItemProvider uiItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.UI}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUIAdapter() {
		if (uiItemProvider == null) {
			uiItemProvider = new UIItemProvider(this);
		}

		return uiItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.ReactClasses} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReactClassesItemProvider reactClassesItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.ReactClasses}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReactClassesAdapter() {
		if (reactClassesItemProvider == null) {
			reactClassesItemProvider = new ReactClassesItemProvider(this);
		}

		return reactClassesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.CoreFunctions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreFunctionsItemProvider coreFunctionsItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.CoreFunctions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreFunctionsAdapter() {
		if (coreFunctionsItemProvider == null) {
			coreFunctionsItemProvider = new CoreFunctionsItemProvider(this);
		}

		return coreFunctionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Router} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RouterItemProvider routerItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Router}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRouterAdapter() {
		if (routerItemProvider == null) {
			routerItemProvider = new RouterItemProvider(this);
		}

		return routerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Structure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructureItemProvider structureItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Structure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructureAdapter() {
		if (structureItemProvider == null) {
			structureItemProvider = new StructureItemProvider(this);
		}

		return structureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.ViewComponents} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewComponentsItemProvider viewComponentsItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.ViewComponents}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createViewComponentsAdapter() {
		if (viewComponentsItemProvider == null) {
			viewComponentsItemProvider = new ViewComponentsItemProvider(this);
		}

		return viewComponentsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Subcomponents} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubcomponentsItemProvider subcomponentsItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Subcomponents}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubcomponentsAdapter() {
		if (subcomponentsItemProvider == null) {
			subcomponentsItemProvider = new SubcomponentsItemProvider(this);
		}

		return subcomponentsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Actions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionsItemProvider actionsItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Actions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionsAdapter() {
		if (actionsItemProvider == null) {
			actionsItemProvider = new ActionsItemProvider(this);
		}

		return actionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Request} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestItemProvider requestItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Request}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestAdapter() {
		if (requestItemProvider == null) {
			requestItemProvider = new RequestItemProvider(this);
		}

		return requestItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Services} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServicesItemProvider servicesItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Services}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServicesAdapter() {
		if (servicesItemProvider == null) {
			servicesItemProvider = new ServicesItemProvider(this);
		}

		return servicesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Libraries} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LibrariesItemProvider librariesItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Libraries}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLibrariesAdapter() {
		if (librariesItemProvider == null) {
			librariesItemProvider = new LibrariesItemProvider(this);
		}

		return librariesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Props} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropsItemProvider propsItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Props}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropsAdapter() {
		if (propsItemProvider == null) {
			propsItemProvider = new PropsItemProvider(this);
		}

		return propsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.State} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StateItemProvider stateItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.State}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStateAdapter() {
		if (stateItemProvider == null) {
			stateItemProvider = new StateItemProvider(this);
		}

		return stateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Information} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InformationItemProvider informationItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Information}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInformationAdapter() {
		if (informationItemProvider == null) {
			informationItemProvider = new InformationItemProvider(this);
		}

		return informationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Entities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntitiesItemProvider entitiesItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Entities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntitiesAdapter() {
		if (entitiesItemProvider == null) {
			entitiesItemProvider = new EntitiesItemProvider(this);
		}

		return entitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Functionalities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionalitiesItemProvider functionalitiesItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Functionalities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionalitiesAdapter() {
		if (functionalitiesItemProvider == null) {
			functionalitiesItemProvider = new FunctionalitiesItemProvider(this);
		}

		return functionalitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.SegmentStructure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SegmentStructureItemProvider segmentStructureItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.SegmentStructure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSegmentStructureAdapter() {
		if (segmentStructureItemProvider == null) {
			segmentStructureItemProvider = new SegmentStructureItemProvider(this);
		}

		return segmentStructureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Directories} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectoriesItemProvider directoriesItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Directories}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectoriesAdapter() {
		if (directoriesItemProvider == null) {
			directoriesItemProvider = new DirectoriesItemProvider(this);
		}

		return directoriesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Files} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilesItemProvider filesItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Files}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilesAdapter() {
		if (filesItemProvider == null) {
			filesItemProvider = new FilesItemProvider(this);
		}

		return filesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.AmazonElasticComputeCloud} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AmazonElasticComputeCloudItemProvider amazonElasticComputeCloudItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.AmazonElasticComputeCloud}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAmazonElasticComputeCloudAdapter() {
		if (amazonElasticComputeCloudItemProvider == null) {
			amazonElasticComputeCloudItemProvider = new AmazonElasticComputeCloudItemProvider(this);
		}

		return amazonElasticComputeCloudItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.Association} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssociationItemProvider associationItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.Association}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssociationAdapter() {
		if (associationItemProvider == null) {
			associationItemProvider = new AssociationItemProvider(this);
		}

		return associationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link PhotosMetaModel.PathVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathVariableItemProvider pathVariableItemProvider;

	/**
	 * This creates an adapter for a {@link PhotosMetaModel.PathVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathVariableAdapter() {
		if (pathVariableItemProvider == null) {
			pathVariableItemProvider = new PathVariableItemProvider(this);
		}

		return pathVariableItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (softGalleryItemProvider != null) softGalleryItemProvider.dispose();
		if (domainItemProvider != null) domainItemProvider.dispose();
		if (architectureItemProvider != null) architectureItemProvider.dispose();
		if (technologyItemProvider != null) technologyItemProvider.dispose();
		if (springItemProvider != null) springItemProvider.dispose();
		if (reactItemProvider != null) reactItemProvider.dispose();
		if (repositoryItemProvider != null) repositoryItemProvider.dispose();
		if (restControllerItemProvider != null) restControllerItemProvider.dispose();
		if (springBootApplicationItemProvider != null) springBootApplicationItemProvider.dispose();
		if (requestMappingItemProvider != null) requestMappingItemProvider.dispose();
		if (postMappingItemProvider != null) postMappingItemProvider.dispose();
		if (getMappingItemProvider != null) getMappingItemProvider.dispose();
		if (putMappingItemProvider != null) putMappingItemProvider.dispose();
		if (exceptionHandlerItemProvider != null) exceptionHandlerItemProvider.dispose();
		if (deleteMappingItemProvider != null) deleteMappingItemProvider.dispose();
		if (requestPartItemProvider != null) requestPartItemProvider.dispose();
		if (autowiredItemProvider != null) autowiredItemProvider.dispose();
		if (exceptionItemProvider != null) exceptionItemProvider.dispose();
		if (entityItemProvider != null) entityItemProvider.dispose();
		if (table_sItemProvider != null) table_sItemProvider.dispose();
		if (idItemProvider != null) idItemProvider.dispose();
		if (column_pItemProvider != null) column_pItemProvider.dispose();
		if (generatedValueItemProvider != null) generatedValueItemProvider.dispose();
		if (namedNativeQueryItemProvider != null) namedNativeQueryItemProvider.dispose();
		if (specificationItemProvider != null) specificationItemProvider.dispose();
		if (searchCriteriaItemProvider != null) searchCriteriaItemProvider.dispose();
		if (predicateItemProvider != null) predicateItemProvider.dispose();
		if (configurationItemProvider != null) configurationItemProvider.dispose();
		if (componentItemProvider != null) componentItemProvider.dispose();
		if (order_sItemProvider != null) order_sItemProvider.dispose();
		if (enableAuthorizationServerItemProvider != null) enableAuthorizationServerItemProvider.dispose();
		if (enableResourceServerItemProvider != null) enableResourceServerItemProvider.dispose();
		if (enableWebSecurityItemProvider != null) enableWebSecurityItemProvider.dispose();
		if (enableGlobalMethodSecurityItemProvider != null) enableGlobalMethodSecurityItemProvider.dispose();
		if (beanItemProvider != null) beanItemProvider.dispose();
		if (postgreSQLItemProvider != null) postgreSQLItemProvider.dispose();
		if (queryItemProvider != null) queryItemProvider.dispose();
		if (foreignKeyItemProvider != null) foreignKeyItemProvider.dispose();
		if (triggerItemProvider != null) triggerItemProvider.dispose();
		if (viewItemProvider != null) viewItemProvider.dispose();
		if (index_pItemProvider != null) index_pItemProvider.dispose();
		if (table_pItemProvider != null) table_pItemProvider.dispose();
		if (function_pItemProvider != null) function_pItemProvider.dispose();
		if (databaseItemProvider != null) databaseItemProvider.dispose();
		if (schemeItemProvider != null) schemeItemProvider.dispose();
		if (user_pItemProvider != null) user_pItemProvider.dispose();
		if (clusterItemProvider != null) clusterItemProvider.dispose();
		if (rowItemProvider != null) rowItemProvider.dispose();
		if (columnItemProvider != null) columnItemProvider.dispose();
		if (dataTypeItemProvider != null) dataTypeItemProvider.dispose();
		if (constraintItemProvider != null) constraintItemProvider.dispose();
		if (privilegeItemProvider != null) privilegeItemProvider.dispose();
		if (policyItemProvider != null) policyItemProvider.dispose();
		if (clauseItemProvider != null) clauseItemProvider.dispose();
		if (indexItemProvider != null) indexItemProvider.dispose();
		if (column_sItemProvider != null) column_sItemProvider.dispose();
		if (user_dItemProvider != null) user_dItemProvider.dispose();
		if (appAccessItemProvider != null) appAccessItemProvider.dispose();
		if (profileManagementItemProvider != null) profileManagementItemProvider.dispose();
		if (albumManagementItemProvider != null) albumManagementItemProvider.dispose();
		if (photoActionsItemProvider != null) photoActionsItemProvider.dispose();
		if (photoItemProvider != null) photoItemProvider.dispose();
		if (albumItemProvider != null) albumItemProvider.dispose();
		if (amazonWebServicesItemProvider != null) amazonWebServicesItemProvider.dispose();
		if (nTierItemProvider != null) nTierItemProvider.dispose();
		if (layerItemProvider != null) layerItemProvider.dispose();
		if (connectionItemProvider != null) connectionItemProvider.dispose();
		if (relationItemProvider != null) relationItemProvider.dispose();
		if (restItemProvider != null) restItemProvider.dispose();
		if (postgreSQLConnectionItemProvider != null) postgreSQLConnectionItemProvider.dispose();
		if (amazonS3APIItemProvider != null) amazonS3APIItemProvider.dispose();
		if (presentationItemProvider != null) presentationItemProvider.dispose();
		if (businessLogicItemProvider != null) businessLogicItemProvider.dispose();
		if (dataItemProvider != null) dataItemProvider.dispose();
		if (allowedToUseItemProvider != null) allowedToUseItemProvider.dispose();
		if (presentationSegmentItemProvider != null) presentationSegmentItemProvider.dispose();
		if (businessLogicSegmentItemProvider != null) businessLogicSegmentItemProvider.dispose();
		if (dataSegmentItemProvider != null) dataSegmentItemProvider.dispose();
		if (view_aItemProvider != null) view_aItemProvider.dispose();
		if (component_aItemProvider != null) component_aItemProvider.dispose();
		if (action_aItemProvider != null) action_aItemProvider.dispose();
		if (controller_aItemProvider != null) controller_aItemProvider.dispose();
		if (model_aItemProvider != null) model_aItemProvider.dispose();
		if (repository_aItemProvider != null) repository_aItemProvider.dispose();
		if (security_aItemProvider != null) security_aItemProvider.dispose();
		if (postgreSQL_aItemProvider != null) postgreSQL_aItemProvider.dispose();
		if (amazonS3StorageItemProvider != null) amazonS3StorageItemProvider.dispose();
		if (modulesItemProvider != null) modulesItemProvider.dispose();
		if (componentsItemProvider != null) componentsItemProvider.dispose();
		if (reactFunctionsItemProvider != null) reactFunctionsItemProvider.dispose();
		if (renderItemProvider != null) renderItemProvider.dispose();
		if (constructorItemProvider != null) constructorItemProvider.dispose();
		if (lifeCycleItemProvider != null) lifeCycleItemProvider.dispose();
		if (amazonSimpleStorageServiceItemProvider != null) amazonSimpleStorageServiceItemProvider.dispose();
		if (bucketItemProvider != null) bucketItemProvider.dispose();
		if (batchOperationItemProvider != null) batchOperationItemProvider.dispose();
		if (accessItemProvider != null) accessItemProvider.dispose();
		if (publicItemProvider != null) publicItemProvider.dispose();
		if (objectsPublicItemProvider != null) objectsPublicItemProvider.dispose();
		if (bucketObjectsNotPublicItemProvider != null) bucketObjectsNotPublicItemProvider.dispose();
		if (onlyAuthorizedItemProvider != null) onlyAuthorizedItemProvider.dispose();
		if (file_aItemProvider != null) file_aItemProvider.dispose();
		if (folder_aItemProvider != null) folder_aItemProvider.dispose();
		if (metaDataItemProvider != null) metaDataItemProvider.dispose();
		if (reactConfigurationItemProvider != null) reactConfigurationItemProvider.dispose();
		if (reactDOMItemProvider != null) reactDOMItemProvider.dispose();
		if (dependenciesItemProvider != null) dependenciesItemProvider.dispose();
		if (logicItemProvider != null) logicItemProvider.dispose();
		if (uiItemProvider != null) uiItemProvider.dispose();
		if (reactClassesItemProvider != null) reactClassesItemProvider.dispose();
		if (coreFunctionsItemProvider != null) coreFunctionsItemProvider.dispose();
		if (routerItemProvider != null) routerItemProvider.dispose();
		if (structureItemProvider != null) structureItemProvider.dispose();
		if (viewComponentsItemProvider != null) viewComponentsItemProvider.dispose();
		if (subcomponentsItemProvider != null) subcomponentsItemProvider.dispose();
		if (actionsItemProvider != null) actionsItemProvider.dispose();
		if (requestItemProvider != null) requestItemProvider.dispose();
		if (servicesItemProvider != null) servicesItemProvider.dispose();
		if (librariesItemProvider != null) librariesItemProvider.dispose();
		if (propsItemProvider != null) propsItemProvider.dispose();
		if (stateItemProvider != null) stateItemProvider.dispose();
		if (informationItemProvider != null) informationItemProvider.dispose();
		if (entitiesItemProvider != null) entitiesItemProvider.dispose();
		if (functionalitiesItemProvider != null) functionalitiesItemProvider.dispose();
		if (segmentStructureItemProvider != null) segmentStructureItemProvider.dispose();
		if (directoriesItemProvider != null) directoriesItemProvider.dispose();
		if (filesItemProvider != null) filesItemProvider.dispose();
		if (amazonElasticComputeCloudItemProvider != null) amazonElasticComputeCloudItemProvider.dispose();
		if (associationItemProvider != null) associationItemProvider.dispose();
		if (pathVariableItemProvider != null) pathVariableItemProvider.dispose();
	}

}
