/**
 */
package SystemMetamodel.provider;

import SystemMetamodel.util.SystemMetamodelAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class SystemMetamodelItemProviderAdapterFactory extends SystemMetamodelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public SystemMetamodelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.SoftGallery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftGalleryItemProvider softGalleryItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.SoftGallery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftGalleryAdapter() {
		if (softGalleryItemProvider == null) {
			softGalleryItemProvider = new SoftGalleryItemProvider(this);
		}

		return softGalleryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.Dominio} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DominioItemProvider dominioItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.Dominio}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDominioAdapter() {
		if (dominioItemProvider == null) {
			dominioItemProvider = new DominioItemProvider(this);
		}

		return dominioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.Arquitectura} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArquitecturaItemProvider arquitecturaItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.Arquitectura}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArquitecturaAdapter() {
		if (arquitecturaItemProvider == null) {
			arquitecturaItemProvider = new ArquitecturaItemProvider(this);
		}

		return arquitecturaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.Tecnología} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TecnologíaItemProvider tecnologíaItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.Tecnología}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTecnologíaAdapter() {
		if (tecnologíaItemProvider == null) {
			tecnologíaItemProvider = new TecnologíaItemProvider(this);
		}

		return tecnologíaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.Autenticacion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AutenticacionItemProvider autenticacionItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.Autenticacion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAutenticacionAdapter() {
		if (autenticacionItemProvider == null) {
			autenticacionItemProvider = new AutenticacionItemProvider(this);
		}

		return autenticacionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.Registro} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RegistroItemProvider registroItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.Registro}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRegistroAdapter() {
		if (registroItemProvider == null) {
			registroItemProvider = new RegistroItemProvider(this);
		}

		return registroItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.Usuario} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UsuarioItemProvider usuarioItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.Usuario}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUsuarioAdapter() {
		if (usuarioItemProvider == null) {
			usuarioItemProvider = new UsuarioItemProvider(this);
		}

		return usuarioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.Fotos} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FotosItemProvider fotosItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.Fotos}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFotosAdapter() {
		if (fotosItemProvider == null) {
			fotosItemProvider = new FotosItemProvider(this);
		}

		return fotosItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.manejoPerfil} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected manejoPerfilItemProvider manejoPerfilItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.manejoPerfil}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createmanejoPerfilAdapter() {
		if (manejoPerfilItemProvider == null) {
			manejoPerfilItemProvider = new manejoPerfilItemProvider(this);
		}

		return manejoPerfilItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.Categoria} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CategoriaItemProvider categoriaItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.Categoria}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCategoriaAdapter() {
		if (categoriaItemProvider == null) {
			categoriaItemProvider = new CategoriaItemProvider(this);
		}

		return categoriaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.Imagen} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImagenItemProvider imagenItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.Imagen}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImagenAdapter() {
		if (imagenItemProvider == null) {
			imagenItemProvider = new ImagenItemProvider(this);
		}

		return imagenItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.Acciones} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccionesItemProvider accionesItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.Acciones}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccionesAdapter() {
		if (accionesItemProvider == null) {
			accionesItemProvider = new AccionesItemProvider(this);
		}

		return accionesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.CrearAlbumes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CrearAlbumesItemProvider crearAlbumesItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.CrearAlbumes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCrearAlbumesAdapter() {
		if (crearAlbumesItemProvider == null) {
			crearAlbumesItemProvider = new CrearAlbumesItemProvider(this);
		}

		return crearAlbumesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.VisualizarAlbumes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VisualizarAlbumesItemProvider visualizarAlbumesItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.VisualizarAlbumes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVisualizarAlbumesAdapter() {
		if (visualizarAlbumesItemProvider == null) {
			visualizarAlbumesItemProvider = new VisualizarAlbumesItemProvider(this);
		}

		return visualizarAlbumesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.CargarFotos} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CargarFotosItemProvider cargarFotosItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.CargarFotos}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCargarFotosAdapter() {
		if (cargarFotosItemProvider == null) {
			cargarFotosItemProvider = new CargarFotosItemProvider(this);
		}

		return cargarFotosItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link SystemMetamodel.VisualizarTodasFotos} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VisualizarTodasFotosItemProvider visualizarTodasFotosItemProvider;

	/**
	 * This creates an adapter for a {@link SystemMetamodel.VisualizarTodasFotos}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVisualizarTodasFotosAdapter() {
		if (visualizarTodasFotosItemProvider == null) {
			visualizarTodasFotosItemProvider = new VisualizarTodasFotosItemProvider(this);
		}

		return visualizarTodasFotosItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (softGalleryItemProvider != null) softGalleryItemProvider.dispose();
		if (dominioItemProvider != null) dominioItemProvider.dispose();
		if (arquitecturaItemProvider != null) arquitecturaItemProvider.dispose();
		if (tecnologíaItemProvider != null) tecnologíaItemProvider.dispose();
		if (autenticacionItemProvider != null) autenticacionItemProvider.dispose();
		if (registroItemProvider != null) registroItemProvider.dispose();
		if (usuarioItemProvider != null) usuarioItemProvider.dispose();
		if (fotosItemProvider != null) fotosItemProvider.dispose();
		if (manejoPerfilItemProvider != null) manejoPerfilItemProvider.dispose();
		if (categoriaItemProvider != null) categoriaItemProvider.dispose();
		if (imagenItemProvider != null) imagenItemProvider.dispose();
		if (accionesItemProvider != null) accionesItemProvider.dispose();
		if (crearAlbumesItemProvider != null) crearAlbumesItemProvider.dispose();
		if (visualizarAlbumesItemProvider != null) visualizarAlbumesItemProvider.dispose();
		if (cargarFotosItemProvider != null) cargarFotosItemProvider.dispose();
		if (visualizarTodasFotosItemProvider != null) visualizarTodasFotosItemProvider.dispose();
	}

}
